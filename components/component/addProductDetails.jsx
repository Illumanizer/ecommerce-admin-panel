"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/IvqbFRh5LOb
 */
import Link from "next/link";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import Select from "react-select";
// import {
//   SelectValue,
//   SelectTrigger,
//   SelectItem,
//   SelectContent,
//   Select1,
// } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { useEffect, useState } from "react";
import MarkdownEditor from "./markdown-editor";
import CSidebar from "./Sidebar";
import Layout from "./Layout";


export default function addProductDetails() {
  const [productName, setProductName] = useState("");
  const [productSKU, setProductSKU] = useState("");
  const [brand, setBrand] = useState("");
  const [categories, setCategories] = useState([]);
  const [price, setPrice] = useState(0);
  const [fileURL, setFileURL] = useState("");
  const [description, setDescription] = useState("");
  const [features, setFeatures] = useState("");
  const [usage, setUsage] = useState("");
  const [packaging, setPackaging] = useState("");
  const [thumbnailURL, setThumbnailURL] = useState("");

  const brandoptions = [
    { value: "blue", label: "Blue" },
    { value: "green", label: "Green" },
    { value: "orange", label: "Orange" },
    { value: "purple", label: "Purple" },
  ];
  const categoryOptions = [
    { value: "bluesagsd", label: "bluesagsd" },
    { value: "rockagdgda", label: "rockagdgda" },
    { value: "jazzadsfsad", label: "jazzadsfsad" },
    { value: "orchestraagd", label: "orchestraagd" },
    { value: "orchestraagd", label: "orchestraagd" },
    { value: "gsd", label: "gad" },
    { value: "orchestgadraagd", label: "asfd" },
    { value: "orchestraagd", label: "orchestraagd" },
    { value: "orchestraagd", label: "orchestraagd" },
    { value: "orchestraagd", label: "orchestraagd" },
  ];


  useEffect(()=>{console.log(description)},[description])
  return (
    <div className="grid gap-6 w-full max-w-2xl mx-auto p-4 md:p-6 lg:p-8">
      <h1 className="text-2xl font-bold text-gray-800 ">Product Details</h1>
      <form className="grid gap-6">
        <div className="grid gap-1.5">
          <Label className="text-gray-800 " htmlFor="name">
            Product Name
          </Label>
          <Input
            id="name"
            placeholder="Product Name"
            type="text"
            onChange={(e) => setProductName(e.target.value)}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800 " htmlFor="sku">
            Product SKU
          </Label>
          <Input
            id="sku"
            placeholder="Product SKU(unique)"
            type="text"
            onChange={(e) => setProductSKU(e.target.value)}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800 " htmlFor="brand">
            Brand
          </Label>
          <Select
            options={brandoptions}
            onChange={(e) => setBrand(e.value)}
            autoFocus={true}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="price">
            Price
          </Label>
          <div className="grid gap-4  md:grid-cols-1">
            <Input
              id="regular-price"
              placeholder="Product Price"
              type="number"
              onChange={(e) => setPrice(e.target.value)}
            />
          </div>
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800 " htmlFor="file-url">
            File URL
          </Label>
          <Input
            id="file-url"
            placeholder="File URL"
            type="text"
            onChange={(e) => setFileURL(e.target.value)}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="categories">
            Categories
          </Label>
          <Select
            isMulti
            onChange={(e) => setCategories(e.map((e) => e.value))}
            options={categoryOptions}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="description">
            Description
          </Label>
          <MarkdownEditor
            handleProcedureContentChange={setDescription}
            value={description}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="description">
            Features
          </Label>
          <MarkdownEditor
            handleProcedureContentChange={setFeatures}
            value={features}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="description">
            Usage
          </Label>
          <MarkdownEditor
            handleProcedureContentChange={setUsage}
            value={usage}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="description">
            Packaging
          </Label>
          <MarkdownEditor
            handleProcedureContentChange={setPackaging}
            value={packaging}
          />
        </div>
        <div className="grid gap-1.5">
          <Label className="text-gray-800" htmlFor="thumbnail-url">
            Thumbnail URL
          </Label>
          <Input
            id="thumbnail-url"
            placeholder="Thumbnail URL"
            type="text"
            onChange={setThumbnailURL}
          />
        </div>

        <Button
          className="justify-self-start bg-green-500 hover:bg-green-600 text-white"
          type="submit"
        >
          Add Product
        </Button>
      </form>
    </div>
  );
}
